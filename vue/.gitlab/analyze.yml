SonarQubeVue:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  stage: analyze
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_PROJECT_NAME}-${CI_JOB_NAME}-vue"
    paths:
      - .sonar/cache
  script:
    - |
      cd vue
      sonar-scanner -Dsonar.qualitygate.wait=true \
                    -Dsonar.projectName="${CI_PROJECT_NAMESPACE} - ${CI_PROJECT_NAME}-vue" \
                    -Dsonar.projectKey="${SONAR_PROJECT_KEY_PREFIX}${CI_PROJECT_NAME}-frontend" \
                    -Dsonar.host.url="${SONAR_HOST_URL}" \
                    -Dsonar.sources=src \
                    -Dsonar.exclusions="**/*.spec.ts,**/*.spec.js,**/*.test.ts,**/*.test.js,**/__tests__/**/*,**/node_modules/**,**/*.json,**/*.html,**/*.xml,**/*.svg,**/*.png,**/*.jpg,**/*.jpeg,**/*.gif,**/*.md,**/*.stories.ts,**/demo.ts,**/src/demo/**/*" \
                    -Dsonar.tests=src \
                    -Dsonar.test.inclusions="**/*.spec.ts,**/*.spec.js,**/*.test.ts,**/*.test.js,**/__tests__/**/*" \
                    -Dsonar.javascript.lcov.reportPaths=../vue/coverage/lcov.info \
                    -Dsonar.javascript.cobertura.reportPaths=../vue/coverage/cobertura-coverage.xml \
                    -Dsonar.branch.name="${CI_COMMIT_REF_SLUG}" \
                    -Dsonar.projectVersion="${PROJECT_VERSION}" \
                    -Dsonar.login="${SONAR_LOGIN}"
  allow_failure: false
  rules:
    - if: '$CI_MERGE_REQUEST_IID'  # Runs on merge requests (equivalent to pull_request)
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'  # Runs on pushes to main or develop
