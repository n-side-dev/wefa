name: Build and Publish Docs (Vue + Django)

on:
  pull_request:
  push:
    branches: [ main, develop ]

# Restore before workflow validated and merge done
#on:
#  push:
#    branches: [ main, develop ]
#  workflow_dispatch:

# Permissions required for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Ensure only one pages deployment runs at a time
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'vue/package-lock.json'

      - name: Install and build Vue Storybook
        working-directory: vue
        run: |
          npm ci
          npm run build-storybook

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Prepare Pages content
        env:
          DJANGO_SETTINGS_MODULE: demo.settings
        run: |
          set -e
          mkdir -p gh-pages/vue gh-pages/django
          # Copy Vue Storybook (if present) under /vue
          if [ -d "vue/storybook-static" ]; then
            cp -r vue/storybook-static/* gh-pages/vue/
          else
            echo "<html><body><h1>Vue docs</h1><p>No Storybook build found.</p></body></html>" > gh-pages/vue/index.html
          fi

          # Install Python deps and pdoc, generate Django docs from nside_wefa
          cd django
          python -m pip install --upgrade pip
          python -m pip install . pdoc
          pdoc --html --force -o ../gh-pages/django nside_wefa
          cd ..

          # Use tracked landing page for the portal
          mkdir -p gh-pages
          cp .github/page/index.html gh-pages/index.html

          # Disable Jekyll on GitHub Pages artifact
          touch gh-pages/.nojekyll

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: gh-pages

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
