name: Django CI

on:
  pull_request:
  push:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  lint:
    name: Ruff Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: django
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python and install deps
        uses: ./.github/actions/setup-python
        with:
          python-version: '3.12'
          cache-dependency-path: 'pyproject.toml'
          install-dev: 'true'

      - name: Ruff - static analysis
        run: ruff check .

      - name: Ruff - formatting check
        run: ruff format --check .

  type:
    name: Mypy Type Check
    runs-on: ubuntu-latest
    needs: [lint]
    defaults:
      run:
        working-directory: django
    env:
      DJANGO_SETTINGS_MODULE: demo.settings
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python and install deps
        uses: ./.github/actions/setup-python
        with:
          python-version: '3.12'
          cache-dependency-path: 'pyproject.toml'
          install-dev: 'true'

      - name: Run mypy
        run: mypy --install-types --non-interactive .

  tests:
    name: Django Tests
    runs-on: ubuntu-latest
    needs: [lint, type]
    defaults:
      run:
        working-directory: django
    env:
      DJANGO_SETTINGS_MODULE: demo.settings
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python and install deps
        uses: ./.github/actions/setup-python
        with:
          python-version: '3.12'
          cache-dependency-path: 'pyproject.toml'
          install-dev: 'true'

      - name: Migrate (SQLite)
        run: python manage.py migrate --noinput

      - name: Run tests (pytest + coverage)
        run: pytest --cov-config=.coveragerc --cov-report xml --cov .

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: django/coverage.xml
          if-no-files-found: warn

  migrations-sanity:
    name: Migrations Sanity Check
    runs-on: ubuntu-latest
    needs: [lint, type]
    defaults:
      run:
        working-directory: django
    env:
      DJANGO_SETTINGS_MODULE: demo.settings
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python and install deps
        uses: ./.github/actions/setup-python
        with:
          python-version: '3.12'
          cache-dependency-path: 'pyproject.toml'
          install-dev: 'true'

      - name: Check for pending migrations
        run: python manage.py makemigrations --check --dry-run

      - name: Show migration plan
        run: python manage.py migrate --plan

      - name: Apply migrations
        run: python manage.py migrate --noinput
