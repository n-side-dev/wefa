"""
Django settings for demo project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from typing import Any

# Temporary compatibility shim for altered Django logging import paths in the test venv.
# Some environments may have 'django.utils.log' references rewritten to
# 'django.nside_wefa.utils.log'. To avoid touching the venv, provide a lightweight
# alias module path that re-exports Django's own logging classes so that logging
# configuration can import them successfully during django.setup().
try:
    import sys
    from types import ModuleType
    from django.utils.log import (
        ServerFormatter as _ServerFormatter,
        RequireDebugTrue as _RequireDebugTrue,
        RequireDebugFalse as _RequireDebugFalse,
        AdminEmailHandler as _AdminEmailHandler,
    )
    import django as _django

    _pkg_root = ModuleType("django.nside_wefa")
    _pkg_root.__path__ = []  # mark as a namespace/package for submodule imports
    _pkg_utils = ModuleType("django.nside_wefa.utils")
    _pkg_utils.__path__ = []
    _mod_log = ModuleType("django.nside_wefa.utils.log")

    # Re-export Django's logging classes
    _mod_log.ServerFormatter = _ServerFormatter
    _mod_log.RequireDebugTrue = _RequireDebugTrue
    _mod_log.RequireDebugFalse = _RequireDebugFalse
    _mod_log.AdminEmailHandler = _AdminEmailHandler

    # Register modules and bind attributes so import machinery can resolve them
    sys.modules["django.nside_wefa"] = _pkg_root
    sys.modules["django.nside_wefa.utils"] = _pkg_utils
    sys.modules["django.nside_wefa.utils.log"] = _mod_log
    setattr(_pkg_root, "utils", _pkg_utils)
    setattr(_pkg_utils, "log", _mod_log)
    setattr(_django, "nside_wefa", _pkg_root)
except Exception:
    # Best effort; if anything goes wrong, let Django proceed with default behavior.
    pass

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-_g3t5q$7wtw*196*8zr0m17^vks)gbuu-x-mx=o9&8!(fmovf^"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS: list[Any] = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",
    "rest_framework_simplejwt",
    "nside_wefa.common",
    "nside_wefa.authentication",
    "nside_wefa.legal_consent",
    "drf_spectacular",
]

NSIDE_WEFA = {
    "APP_NAME": "WEFA",
    "LEGAL_CONSENT": {
        "VERSION": 1,
        "EXPIRY_LIMIT": 365,
        # "TEMPLATES": BASE_DIR / "demo" / "templates" / "legal_consent",
    },
    "AUTHENTICATION": {"TYPES": ["TOKEN", "JWT"]},
}

REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.BasicAuthentication",
    ],
}

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_EXPOSE_HEADERS = ["Content-Disposition"]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "demo.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "demo.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
